{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/CustomDragLayer.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDragLayer } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getItemStyles(initialOffset, currentOffset) {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none'\n    };\n  }\n  const {\n    x,\n    y\n  } = currentOffset;\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform,\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0\n  };\n}\nconst CustomDragLayer = ({\n  getCardImage\n}) => {\n  _s();\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n  if (!isDragging) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: getItemStyles(initialOffset, currentOffset),\n    children: itemType === 'card' && item.card && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing-card\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/cards/${getCardImage(item.card)}`,\n        alt: item.card,\n        className: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomDragLayer, \"9aTFqFAl51B+OoAjt/QHTJKIAuA=\", false, function () {\n  return [useDragLayer];\n});\n_c = CustomDragLayer;\nexport default CustomDragLayer;\nvar _c;\n$RefreshReg$(_c, \"CustomDragLayer\");","map":{"version":3,"names":["React","useDragLayer","jsxDEV","_jsxDEV","getItemStyles","initialOffset","currentOffset","display","x","y","transform","WebkitTransform","position","pointerEvents","zIndex","left","top","CustomDragLayer","getCardImage","_s","itemType","isDragging","item","monitor","getItem","getItemType","getInitialSourceClientOffset","getSourceClientOffset","style","children","card","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/CustomDragLayer.js"],"sourcesContent":["import React from 'react';\nimport { useDragLayer } from 'react-dnd';\n\nfunction getItemStyles(initialOffset, currentOffset) {\n  if (!initialOffset || !currentOffset) {\n    return {\n      display: 'none',\n    };\n  }\n\n  const { x, y } = currentOffset;\n\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform,\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n  };\n}\n\nconst CustomDragLayer = ({ getCardImage }) => {\n  const {\n    itemType,\n    isDragging,\n    item,\n    initialOffset,\n    currentOffset,\n  } = useDragLayer((monitor) => ({\n    item: monitor.getItem(),\n    itemType: monitor.getItemType(),\n    initialOffset: monitor.getInitialSourceClientOffset(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging(),\n  }));\n\n  if (!isDragging) {\n    return null;\n  }\n\n  return (\n    <div style={getItemStyles(initialOffset, currentOffset)}>\n      {itemType === 'card' && item.card && (\n        <div className=\"playing-card\">\n          <img \n            src={`/images/cards/${getCardImage(item.card)}`}\n            alt={item.card}\n            className=\"card-image\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CustomDragLayer;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,aAAaA,CAACC,aAAa,EAAEC,aAAa,EAAE;EACnD,IAAI,CAACD,aAAa,IAAI,CAACC,aAAa,EAAE;IACpC,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,MAAM;IAAEC,CAAC;IAAEC;EAAE,CAAC,GAAGH,aAAa;EAE9B,MAAMI,SAAS,GAAG,aAAaF,CAAC,OAAOC,CAAC,KAAK;EAC7C,OAAO;IACLC,SAAS;IACTC,eAAe,EAAED,SAAS;IAC1BE,QAAQ,EAAE,OAAO;IACjBC,aAAa,EAAE,MAAM;IACrBC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE;EACP,CAAC;AACH;AAEA,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IACJC,QAAQ;IACRC,UAAU;IACVC,IAAI;IACJjB,aAAa;IACbC;EACF,CAAC,GAAGL,YAAY,CAAEsB,OAAO,KAAM;IAC7BD,IAAI,EAAEC,OAAO,CAACC,OAAO,CAAC,CAAC;IACvBJ,QAAQ,EAAEG,OAAO,CAACE,WAAW,CAAC,CAAC;IAC/BpB,aAAa,EAAEkB,OAAO,CAACG,4BAA4B,CAAC,CAAC;IACrDpB,aAAa,EAAEiB,OAAO,CAACI,qBAAqB,CAAC,CAAC;IAC9CN,UAAU,EAAEE,OAAO,CAACF,UAAU,CAAC;EACjC,CAAC,CAAC,CAAC;EAEH,IAAI,CAACA,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,oBACElB,OAAA;IAAKyB,KAAK,EAAExB,aAAa,CAACC,aAAa,EAAEC,aAAa,CAAE;IAAAuB,QAAA,EACrDT,QAAQ,KAAK,MAAM,IAAIE,IAAI,CAACQ,IAAI,iBAC/B3B,OAAA;MAAK4B,SAAS,EAAC,cAAc;MAAAF,QAAA,eAC3B1B,OAAA;QACE6B,GAAG,EAAE,iBAAiBd,YAAY,CAACI,IAAI,CAACQ,IAAI,CAAC,EAAG;QAChDG,GAAG,EAAEX,IAAI,CAACQ,IAAK;QACfC,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCIF,eAAe;EAAA,QAOfhB,YAAY;AAAA;AAAAqC,EAAA,GAPZrB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}