{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameLogic({\n  roomSize\n}) {\n  _s();\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(null);\n\n  // Start Game: Calls Python backend\n  const startGame = async () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      try {\n        const response = await fetch(\"http://localhost:5000/start_game\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            num_players: roomSize\n          }),\n          mode: \"cors\",\n          credentials: \"include\"\n        });\n        if (!response.ok) throw new Error(\"Failed to start game\");\n        const data = await response.json();\n        setGameId(data.game_id);\n        setPlayerCards(data.player_cards);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n\n  // Fetch Game State from Python backend\n  const fetchGameState = async () => {\n    if (!gameId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/game_state/${gameId}`);\n      if (!response.ok) throw new Error(\"Game state not found\");\n      const data = await response.json();\n      setPlayerCards(data.player_cards);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Game Logic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGameState,\n        children: \"Refresh Game State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), playerCards.length > 0 && playerCards.map((hand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Player \", index + 1, \" Hand:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: hand.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(GameLogic, \"9hFZIx0V3jLetCfZSuuPEsYfLYg=\");\n_c = GameLogic;\nexport default GameLogic;\nvar _c;\n$RefreshReg$(_c, \"GameLogic\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GameLogic","roomSize","_s","playerCards","setPlayerCards","gameId","setGameId","startGame","response","fetch","method","headers","body","JSON","stringify","num_players","mode","credentials","ok","Error","data","json","game_id","player_cards","error","console","log","fetchGameState","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","hand","index","join","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction GameLogic({ roomSize }) {\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(null);\n\n  // Start Game: Calls Python backend\n  const startGame = async () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n        try {\n          const response = await fetch(\"http://localhost:5000/start_game\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ num_players: roomSize }),\n            mode: \"cors\",\n            credentials: \"include\",\n          });\n    \n          if (!response.ok) throw new Error(\"Failed to start game\");\n    \n          const data = await response.json();\n          setGameId(data.game_id);\n          setPlayerCards(data.player_cards);\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n    }\n    else {\n        console.log(\"Wrong number of players\")\n    }\n  };\n\n  // Fetch Game State from Python backend\n  const fetchGameState = async () => {\n    if (!gameId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/game_state/${gameId}`);\n      if (!response.ok) throw new Error(\"Game state not found\");\n\n      const data = await response.json();\n      setPlayerCards(data.player_cards);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Game Logic</h3>\n\n      {/* <label>Number of Players: {numPlayers}</label> */}\n      \n      <button onClick={startGame}>Start Game</button>\n\n      {gameId && (\n        <div>\n          <h3>Game ID: {gameId}</h3>\n          <button onClick={fetchGameState}>Refresh Game State</button>\n        </div>\n      )}\n\n      {playerCards.length > 0 &&\n        playerCards.map((hand, index) => (\n          <div key={index}>\n            <h4>Player {index + 1} Hand:</h4>\n            <p>{hand.join(\", \")}</p>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default GameLogic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}