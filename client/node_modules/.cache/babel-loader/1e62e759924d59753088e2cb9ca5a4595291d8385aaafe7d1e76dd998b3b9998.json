{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameLogic() {\n  _s();\n  const [numPlayers, setNumPlayers] = useState(0);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(null);\n\n  // Start Game: Calls Python backend\n  const startGame = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/start_game\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          num_players: numPlayers\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to start game\");\n      const data = await response.json();\n      setGameId(data.game_id);\n      setPlayerCards(data.player_cards);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Fetch Game State from Python backend\n  const fetchGameState = async () => {\n    if (!gameId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/game_state/${gameId}`);\n      if (!response.ok) throw new Error(\"Game state not found\");\n      const data = await response.json();\n      setPlayerCards(data.player_cards);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Game Logic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Number of Players:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      max: \"4\",\n      value: numPlayers,\n      onChange: e => setNumPlayers(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGameState,\n        children: \"Refresh Game State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), playerCards.length > 0 && playerCards.map((hand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Player \", index + 1, \" Hand:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: hand.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(GameLogic, \"WeHA5H5Gv7PcCaJuBbx6kfVdBso=\");\n_c = GameLogic;\nexport default GameLogic;\nvar _c;\n$RefreshReg$(_c, \"GameLogic\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GameLogic","_s","numPlayers","setNumPlayers","playerCards","setPlayerCards","gameId","setGameId","startGame","response","fetch","method","headers","body","JSON","stringify","num_players","ok","Error","data","json","game_id","player_cards","error","console","fetchGameState","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","e","Number","target","onClick","length","map","hand","index","join","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction GameLogic() {\n  const [numPlayers, setNumPlayers] = useState(0);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(null);\n\n  // Start Game: Calls Python backend\n  const startGame = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/start_game\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ num_players: numPlayers }),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to start game\");\n\n      const data = await response.json();\n      setGameId(data.game_id);\n      setPlayerCards(data.player_cards);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Fetch Game State from Python backend\n  const fetchGameState = async () => {\n    if (!gameId) return;\n    try {\n      const response = await fetch(`http://localhost:5000/game_state/${gameId}`);\n      if (!response.ok) throw new Error(\"Game state not found\");\n\n      const data = await response.json();\n      setPlayerCards(data.player_cards);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Game Logic</h3>\n\n      <label>Number of Players:</label>\n      <input\n        type=\"number\"\n        min=\"1\"\n        max=\"4\"\n        value={numPlayers}\n        onChange={(e) => setNumPlayers(Number(e.target.value))}\n      />\n      <button onClick={startGame}>Start Game</button>\n\n      {gameId && (\n        <div>\n          <h3>Game ID: {gameId}</h3>\n          <button onClick={fetchGameState}>Refresh Game State</button>\n        </div>\n      )}\n\n      {playerCards.length > 0 &&\n        playerCards.map((hand, index) => (\n          <div key={index}>\n            <h4>Player {index + 1} Hand:</h4>\n            <p>{hand.join(\", \")}</p>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default GameLogic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}