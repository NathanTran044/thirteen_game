{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5001\");\nfunction GameLogic({\n  room,\n  roomSize,\n  newGameId\n}) {\n  _s();\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(newGameId);\n\n  // Start Game: Calls Python backend\n  const startGame = async () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      try {\n        const response = await fetch(\"http://localhost:5001/start_game\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            num_players: roomSize,\n            room: room\n          }),\n          mode: \"cors\",\n          credentials: \"include\"\n        });\n        if (!response.ok) throw new Error(\"Failed to start game\");\n        const data = await response.json();\n        setGameId(data.game_id);\n        setPlayerCards(data.player_cards);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n\n  // Listen for real-time game state updates\n  useEffect(() => {\n    console.log(\"Setting up game_state_update listener\");\n    const handleGameStateUpdate = data => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.game_id);\n      setPlayerCards(data.player_cards);\n    };\n    socket.on(\"game_state_update\", handleGameStateUpdate);\n    return () => {\n      console.log(\"Cleaning up game_state_update listener\");\n      socket.off(\"game_state_update\", handleGameStateUpdate);\n    };\n  }, [newGameId]);\n  useEffect(() => {\n    socket.on(\"game_state_update\", data => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.game_id);\n      setPlayerCards(data.player_cards);\n    });\n    if (newGameId) {\n      setGameId(newGameId);\n    }\n    return () => {\n      socket.off(\"game_state_update\"); // Cleanup\n    };\n  }, [newGameId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Game Logic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), playerCards.length > 0 && playerCards.map((hand, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Player \", index + 1, \" Hand:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: hand.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(GameLogic, \"5CFmq9o3XrLl+qBdVgVFZ0SCtR0=\");\n_c = GameLogic;\nexport default GameLogic;\nvar _c;\n$RefreshReg$(_c, \"GameLogic\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","GameLogic","room","roomSize","newGameId","_s","playerCards","setPlayerCards","gameId","setGameId","startGame","response","fetch","method","headers","body","JSON","stringify","num_players","mode","credentials","ok","Error","data","json","game_id","player_cards","error","console","log","handleGameStateUpdate","on","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","hand","index","join","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:5001\");\n\nfunction GameLogic({ room, roomSize, newGameId }) {\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(newGameId);\n\n  // Start Game: Calls Python backend\n  const startGame = async () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      try {\n        const response = await fetch(\"http://localhost:5001/start_game\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ num_players: roomSize, room: room}),\n          mode: \"cors\",\n          credentials: \"include\",\n        });\n\n        if (!response.ok) throw new Error(\"Failed to start game\");\n\n        const data = await response.json();\n        setGameId(data.game_id);\n        setPlayerCards(data.player_cards);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n\n  // Listen for real-time game state updates\n  useEffect(() => {\n    console.log(\"Setting up game_state_update listener\");\n  \n    const handleGameStateUpdate = (data) => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.game_id);\n      setPlayerCards(data.player_cards);\n    };\n  \n    socket.on(\"game_state_update\", handleGameStateUpdate);\n  \n    return () => {\n      console.log(\"Cleaning up game_state_update listener\");\n      socket.off(\"game_state_update\", handleGameStateUpdate);\n    };\n  }, [newGameId]);\n\n  useEffect(() => {\n    socket.on(\"game_state_update\", (data) => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.game_id);\n      setPlayerCards(data.player_cards);\n    });\n\n    if (newGameId) {\n      setGameId(newGameId);\n    }\n\n    return () => {\n      socket.off(\"game_state_update\"); // Cleanup\n    };\n  }, [newGameId]);\n\n  return (\n    <div>\n      <h3>Game Logic</h3>\n      \n      <button onClick={startGame}>Start Game</button>\n\n      {gameId && (\n        <div>\n          <h3>Game ID: {gameId}</h3>\n        </div>\n      )}\n\n      {playerCards.length > 0 &&\n        playerCards.map((hand, index) => (\n          <div key={index}>\n            <h4>Player {index + 1} Hand:</h4>\n            <p>{hand.join(\", \")}</p>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default GameLogic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}