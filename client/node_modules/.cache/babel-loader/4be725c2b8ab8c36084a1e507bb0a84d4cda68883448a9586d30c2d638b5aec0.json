{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameLogic({\n  username,\n  socket,\n  room,\n  roomSize,\n  newGameId\n}) {\n  _s();\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(newGameId);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentTurn, setCurrentTurn] = useState(false);\n  const [lastPlayedCard, setLastPlayedCard] = useState(\"\");\n\n  // Start Game\n  const startGame = () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      socket.emit(\"start_game\", {\n        num_players: roomSize,\n        room\n      });\n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n  const playCard = () => {\n    console.log(\"GameId and Card played: \" + gameId + \" \" + selectedCard);\n    socket.emit(\"play_card\", {\n      gameId,\n      selectedCard\n    });\n    setSelectedCard(\"\");\n  };\n  const passTurn = () => {\n    console.log(\"Passing\");\n    socket.emit(\"play_card\", {\n      gameId,\n      selectedCard: \"pass\"\n    });\n  };\n  useEffect(() => {\n    socket.on(\"begin_game\", () => {\n      console.log(\"Game begin\");\n      setGameStarted(true);\n    });\n    socket.on(\"game_state_update\", data => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.gameId);\n      setCurrentTurn(data.currentTurn);\n      setLastPlayedCard(data.lastPlayedCard);\n    });\n    socket.on(\"player_hand\", data => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    });\n    socket.on(\"invalid_move\", data => {\n      alert(data.message);\n    });\n    socket.on(\"player_finished\", data => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      alert(`Player ${data.finished}`);\n    });\n    socket.on(\"game_over\", data => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      alert(`Game over! Winner: ${data.winner}`);\n    });\n    if (newGameId) {\n      setGameId(newGameId);\n    }\n    return () => {\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n      socket.off(\"invalid_move\");\n      socket.off(\"game_over\");\n    };\n  }, [newGameId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Game Logic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), currentTurn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [currentTurn, \"'s turn\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: lastPlayedCard ? `Last Played Card: ${lastPlayedCard}` : \"Play anything\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), playerCards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: playerCards.join(\" \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter card to play\",\n        value: selectedCard,\n        onChange: e => setSelectedCard(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playCard,\n        children: \"Play Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: passTurn,\n        children: \"Pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(GameLogic, \"4ckM1+Pb/McpMgu71/alVIlN2W8=\");\n_c = GameLogic;\nexport default GameLogic;\nvar _c;\n$RefreshReg$(_c, \"GameLogic\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GameLogic","username","socket","room","roomSize","newGameId","_s","playerCards","setPlayerCards","gameId","setGameId","gameStarted","setGameStarted","selectedCard","setSelectedCard","currentTurn","setCurrentTurn","lastPlayedCard","setLastPlayedCard","startGame","emit","num_players","console","log","playCard","passTurn","on","data","alert","message","finished","winner","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","join","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction GameLogic({ username, socket, room, roomSize, newGameId }) {\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(newGameId);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentTurn, setCurrentTurn] = useState(false);\n  const [lastPlayedCard, setLastPlayedCard] = useState(\"\");\n\n  // Start Game\n  const startGame = () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      socket.emit(\"start_game\", { num_players: roomSize, room });\n  \n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n\n  const playCard = () => {\n    console.log(\"GameId and Card played: \" + gameId + \" \" + selectedCard);\n    socket.emit(\"play_card\", { gameId, selectedCard });\n    setSelectedCard(\"\")\n  };\n\n  const passTurn = () => {\n    console.log(\"Passing\");\n    socket.emit(\"play_card\", { gameId, selectedCard: \"pass\" });\n  }\n\n  useEffect(() => {\n    socket.on(\"begin_game\", () => {\n      console.log(\"Game begin\");\n      setGameStarted(true);\n    });\n\n    socket.on(\"game_state_update\", (data) => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.gameId);\n      setCurrentTurn(data.currentTurn);\n      setLastPlayedCard(data.lastPlayedCard);\n    });\n\n    socket.on(\"player_hand\", (data) => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    })\n\n    socket.on(\"invalid_move\", (data) => {\n      alert(data.message);\n    });\n\n    socket.on(\"player_finished\", (data) => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      alert(`Player ${data.finished}`);\n    });\n\n  \n    socket.on(\"game_over\", (data) => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      alert(`Game over! Winner: ${data.winner}`);\n    });\n\n    if (newGameId) {\n      setGameId(newGameId);\n    }\n\n    return () => {\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n      socket.off(\"invalid_move\");\n      socket.off(\"game_over\");\n    };\n  }, [newGameId]);\n\n  return (\n    <div>\n      <h3>Game Logic</h3>\n      \n      <button onClick={startGame}>Start Game</button>\n\n      {/* {gameId && (\n        <div>\n          <h3>Game ID: {gameId}</h3>\n        </div>\n      )} */}\n\n      {currentTurn && (\n        <div>\n          <h1>{currentTurn}'s turn</h1>\n        </div>\n      )}\n\n      <div>\n        <h2>\n          {lastPlayedCard ? `Last Played Card: ${lastPlayedCard}` : \"Play anything\"}\n        </h2>\n      </div>\n\n      {playerCards.length > 0 && (\n        <div>\n          <p>{playerCards.join(\" \")}</p>\n        </div>\n      )}\n\n      {gameStarted && (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter card to play\"\n            value={selectedCard}\n            onChange={(e) => setSelectedCard(e.target.value)}\n          />\n          \n          <button onClick={playCard}>Play Card</button>\n          <button onClick={passTurn}>Pass</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameLogic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}