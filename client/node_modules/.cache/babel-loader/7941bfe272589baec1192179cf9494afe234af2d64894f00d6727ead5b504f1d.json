{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/House.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction House({\n  socket\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [roomSize, setRoomSize] = useState(0);\n  const [gameId, setGameId] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Join Room\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", {\n        username,\n        room\n      }, (success, updatedSize, id) => {\n        if (success) {\n          console.log(`${id} Successfully joined room: ${room}`);\n          setRoomSize(updatedSize);\n          setGameId(id);\n        } else {\n          alert(`Failed to join room: ${room}`);\n        }\n      });\n    }\n  };\n\n  // Start Game\n  const startGame = () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      socket.emit(\"start_game\", {\n        num_players: roomSize,\n        room\n      });\n\n      // Navigate to GameRoom when game starts\n      // console.log(\"sending this data: \",  { username, room, roomSize, gameId })\n      // navigate(\"/game\", { state: { username, room, roomSize, gameId } });\n    } else {\n      alert(\"Invalid number of players.\");\n    }\n  };\n\n  // Handle Socket Events\n  useEffect(() => {\n    socket.on(\"room_info_update\", ({\n      roomSize,\n      gameId\n    }) => {\n      setRoomSize(roomSize);\n      setGameId(gameId);\n    });\n    socket.on(\"invalid_move\", data => {\n      alert(data.message);\n    });\n    socket.on(\"begin_game\", () => {\n      console.log(\"Game begin\");\n      console.log(\"sending this data: \", {\n        username,\n        room,\n        roomSize,\n        gameId\n      });\n      navigate(\"/game\", {\n        state: {\n          username,\n          room,\n          roomSize,\n          gameId\n        }\n      });\n    });\n    return () => {\n      socket.off(\"room_info_update\");\n      socket.off(\"invalid_move\");\n      socket.off(\"begin_game\");\n    };\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Join a Game Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      onChange: event => setUsername(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Room ID\",\n      onChange: event => setRoom(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \"Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Users in Room: \", roomSize]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), roomSize > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(House, \"HiDEOoHkHN38mudV3U+j3uErnQc=\", false, function () {\n  return [useNavigate];\n});\n_c = House;\nexport default House;\nvar _c;\n$RefreshReg$(_c, \"House\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","House","socket","_s","username","setUsername","room","setRoom","roomSize","setRoomSize","gameId","setGameId","navigate","joinRoom","emit","success","updatedSize","id","console","log","alert","startGame","num_players","on","data","message","state","off","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/House.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction House({ socket }) {\n  const [username, setUsername] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [roomSize, setRoomSize] = useState(0);\n  const [gameId, setGameId] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Join Room\n  const joinRoom = () => {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", { username, room }, (success, updatedSize, id) => {\n        if (success) {\n          console.log(`${id} Successfully joined room: ${room}`);\n          setRoomSize(updatedSize); \n          setGameId(id);\n        } else {\n          alert(`Failed to join room: ${room}`);\n        }\n      });\n    }\n  };\n\n  // Start Game\n  const startGame = () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      socket.emit(\"start_game\", { num_players: roomSize, room });\n\n      // Navigate to GameRoom when game starts\n      // console.log(\"sending this data: \",  { username, room, roomSize, gameId })\n      // navigate(\"/game\", { state: { username, room, roomSize, gameId } });\n    } else {\n      alert(\"Invalid number of players.\");\n    }\n  };\n\n  // Handle Socket Events\n  useEffect(() => {\n    socket.on(\"room_info_update\", ({ roomSize, gameId }) => {\n      setRoomSize(roomSize);\n      setGameId(gameId);\n    });\n\n    socket.on(\"invalid_move\", (data) => {\n      alert(data.message);\n    });\n\n    socket.on(\"begin_game\", () => {\n      console.log(\"Game begin\");\n      console.log(\"sending this data: \",  { username, room, roomSize, gameId })\n      navigate(\"/game\", { state: { username, room, roomSize, gameId } });\n    });\n\n    return () => {\n      socket.off(\"room_info_update\");\n      socket.off(\"invalid_move\");\n      socket.off(\"begin_game\");\n    };\n  }, [socket]);\n\n  return (\n    <div>\n      <h3>Join a Game Room</h3>\n      \n      <input\n        type=\"text\"\n        placeholder=\"Username\"\n        onChange={(event) => setUsername(event.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Room ID\"\n        onChange={(event) => setRoom(event.target.value)}\n      />\n      <button onClick={joinRoom}>Join Room</button>\n\n      <h3>Users in Room: {roomSize}</h3>\n\n      {roomSize > 0 && <button onClick={startGame}>Start Game</button>}\n    </div>\n  );\n}\n\nexport default House;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}