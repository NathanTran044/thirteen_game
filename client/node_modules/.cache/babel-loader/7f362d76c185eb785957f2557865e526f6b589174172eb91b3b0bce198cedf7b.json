{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameLogic({\n  socket,\n  room,\n  roomSize,\n  newGameId\n}) {\n  _s();\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(newGameId);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentTurn, setCurrentTurn] = useState(false);\n\n  // Start Game: Calls Python backend\n  const startGame = () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      socket.emit(\"start_game\", {\n        num_players: roomSize,\n        room\n      });\n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n  const playCard = () => {\n    console.log(\"Card played \" + selectedCard);\n  };\n  useEffect(() => {\n    socket.on(\"begin_game\", () => {\n      console.log(\"Game begin\");\n      setGameStarted(true);\n    });\n    socket.on(\"game_state_update\", data => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.game_id);\n      setCurrentTurn(data.current_turn);\n    });\n    socket.on(\"player_hand\", data => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    });\n    if (newGameId) {\n      setGameId(newGameId);\n    }\n    return () => {\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n    };\n  }, [newGameId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Game Logic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), gameId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter card to play\",\n        value: selectedCard,\n        onChange: e => setSelectedCard(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), currentTurn && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playCard,\n        children: \"Play Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(GameLogic, \"mMFsA4oPlqZBJg+bNJkja0r4F94=\");\n_c = GameLogic;\nexport default GameLogic;\nvar _c;\n$RefreshReg$(_c, \"GameLogic\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GameLogic","socket","room","roomSize","newGameId","_s","playerCards","setPlayerCards","gameId","setGameId","gameStarted","setGameStarted","selectedCard","setSelectedCard","currentTurn","setCurrentTurn","startGame","emit","num_players","console","log","playCard","on","data","game_id","current_turn","off","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/GameLogic.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction GameLogic({ socket, room, roomSize, newGameId }) {\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(newGameId);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentTurn, setCurrentTurn] = useState(false);\n\n  // Start Game: Calls Python backend\n  const startGame = () => {\n    if (roomSize >= 1 && roomSize <= 4) {\n      socket.emit(\"start_game\", { num_players: roomSize, room });\n  \n    } else {\n      console.log(\"Wrong number of players\");\n    }\n  };\n\n  const playCard = () => {\n    console.log(\"Card played \" + selectedCard);\n  };\n\n  useEffect(() => {\n    socket.on(\"begin_game\", () => {\n      console.log(\"Game begin\");\n      setGameStarted(true);\n    });\n\n    socket.on(\"game_state_update\", (data) => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.game_id);\n      setCurrentTurn(data.current_turn);\n    });\n\n    socket.on(\"player_hand\", (data) => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    })\n\n    if (newGameId) {\n      setGameId(newGameId);\n    }\n\n    return () => {\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n    };\n  }, [newGameId]);\n\n  return (\n    <div>\n      <h3>Game Logic</h3>\n      \n      <button onClick={startGame}>Start Game</button>\n\n      {gameId && (\n        <div>\n          <h3>Game ID: {gameId}</h3>\n        </div>\n      )}\n\n      {/* {playerCards.length > 0 &&\n        playerCards.map((hand, index) => (\n          <div key={index}>\n            <h4>Player {index + 1} Hand:</h4>\n            <p>{hand.join(\", \")}</p>\n          </div>\n        ))} */}\n\n\n      {gameStarted && (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter card to play\"\n            value={selectedCard}\n            onChange={(e) => setSelectedCard(e.target.value)}\n          />\n          {currentTurn && (\n            <button onClick={playCard}>Play Card</button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameLogic;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}