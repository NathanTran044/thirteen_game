{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/GameRoom.js\",\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Chat from \"./Chat\";\nimport './GameRoom.css';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRoom({\n  socket\n}) {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    username,\n    room,\n    roomSize: initialSize\n  } = location.state || {};\n  const [roomSize, setRoomSize] = useState(initialSize);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(\"\");\n  const [selectedCard, setSelectedCard] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(\"\");\n  const [lastPlayedCard, setLastPlayedCard] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [hasNewMessage, setHasNewMessage] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const dragMonitorRef = useRef(null);\n\n  // Create a custom drag hook that tracks global drag state\n  const useCustomDrag = options => {\n    _s();\n    const [collected, drag] = useDrag({\n      ...options,\n      collect: monitor => {\n        const isDragging = monitor.isDragging();\n\n        // Update the global dragging state\n        if (isDragging !== dragMonitorRef.current) {\n          dragMonitorRef.current = isDragging;\n          setIsDragging(isDragging);\n        }\n\n        // Return original collected props\n        return options.collect ? options.collect(monitor) : {\n          isDragging\n        };\n      }\n    });\n    return [collected, drag];\n  };\n  _s(useCustomDrag, \"wr9SfOA+ghs3SRWR3xXEDq+uhV0=\", false, function () {\n    return [useDrag];\n  });\n  const getPlayerPositions = () => {\n    switch (roomSize) {\n      case 2:\n        return ['bottom', 'top'];\n      case 3:\n        return ['bottom', 'left', 'right'];\n      case 4:\n        return ['bottom', 'left', 'top', 'right'];\n      default:\n        return ['bottom'];\n    }\n  };\n  const PlayerAvatar = ({\n    name\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-avatar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-circle\",\n      children: name[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n\n  // Modified to handle multiple card selection\n  const handleCardClick = card => {\n    setSelectedCard(prev => {\n      if (prev.includes(card)) {\n        return prev.filter(c => c !== card);\n      } else {\n        return [...prev, card];\n      }\n    });\n  };\n  const getCardImage = card => {\n    if (!card) return 'cardBack.png';\n\n    // Convert card notation to image filename\n    const rankMap = {\n      '3': '3',\n      '4': '4',\n      '5': '5',\n      '6': '6',\n      '7': '7',\n      '8': '8',\n      '9': '9',\n      '10': '10',\n      'J': 'J',\n      'Q': 'Q',\n      'K': 'K',\n      'A': 'A',\n      '2': '2'\n    };\n    const suitMap = {\n      'C': 'Clubs',\n      'D': 'Diamonds',\n      'H': 'Hearts',\n      'S': 'Spades'\n    };\n    const rank = card.slice(0, -1);\n    const suit = card.slice(-1);\n    return `card${suitMap[suit]}${rankMap[rank]}.png`;\n  };\n  const Card = ({\n    card,\n    isSelectable = true,\n    isSelected = false,\n    faceDown = false\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `playing-card ${isSelectable ? 'selectable' : ''} \n        ${isSelected ? 'selected' : ''}`,\n    onClick: () => isSelectable && handleCardClick(card),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/images/cards/${faceDown ? 'cardBack.png' : getCardImage(card)}`,\n      alt: faceDown ? 'Card back' : card,\n      className: \"card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n  const DraggableCard = ({\n    index,\n    card,\n    isSelected,\n    moveCard,\n    setIsDragging\n  }) => {\n    _s2();\n    const [{\n      isDragging\n    }, drag] = useDrag({\n      type: 'card',\n      item: {\n        index,\n        id: card\n      },\n      collect: monitor => {\n        const dragging = monitor.isDragging();\n        // Update the parent's dragging state\n        setIsDragging(dragging);\n        return {\n          isDragging: dragging\n        };\n      }\n    });\n    const [{\n      isOver\n    }, drop] = useDrop({\n      accept: 'card',\n      hover(item, monitor) {\n        // Skip processing if it's the same card\n        if (item.index === index) {\n          return;\n        }\n\n        // Move the card\n        moveCard(item.index, index);\n\n        // Update the index\n        item.index = index;\n      },\n      collect: monitor => ({\n        isOver: monitor.isOver()\n      })\n    });\n\n    // Create a ref and attach both drag and drop to it\n    const ref = node => {\n      drag(drop(node));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: `\n          playing-card \n          selectable \n          ${isSelected ? 'selected' : ''} \n          ${isDragging ? 'is-dragging' : ''} \n          ${isOver && !isDragging ? 'is-over' : ''}\n        `,\n      onClick: () => handleCardClick(card),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/images/cards/${getCardImage(card)}`,\n        alt: card,\n        className: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  };\n  _s2(DraggableCard, \"qr0Lh5MjhmkSaJ+8pvusl1bqvDo=\", false, function () {\n    return [useDrag, useDrop];\n  });\n  const PlayerPosition = ({\n    position,\n    playerName,\n    cardCount = 0\n  }) => {\n    _s3();\n    const [isHovered, setIsHovered] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `player ${position}`,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card-stack ${position === 'left' || position === 'right' ? 'horizontal' : ''} ${isHovered ? 'expanded' : ''}`,\n        children: [...Array(cardCount)].map((_, i) => /*#__PURE__*/_jsxDEV(Card, {\n          faceDown: true,\n          isSelectable: false\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerAvatar, {\n        name: playerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  };\n  _s3(PlayerPosition, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n  const moveCard = (dragIndex, hoverIndex) => {\n    const newCards = [...playerCards];\n    const draggedCard = newCards[dragIndex];\n    newCards.splice(dragIndex, 1);\n    newCards.splice(hoverIndex, 0, draggedCard);\n    setPlayerCards(newCards);\n  };\n  const playCard = () => {\n    const selectedCardString = selectedCard.join(' ');\n    console.log(\"GameId and Card played: \" + gameId + \" \" + selectedCardString);\n    socket.emit(\"play_card\", {\n      gameId,\n      selectedCard: selectedCardString\n    });\n    setSelectedCard([]);\n  };\n  const passTurn = () => {\n    console.log(\"Passing\");\n    socket.emit(\"play_card\", {\n      gameId,\n      selectedCard: \"pass\"\n    });\n  };\n  const disconnect = () => {\n    console.log(\"Disconnecting\");\n    socket.emit(\"leave_room\");\n    navigate(\"/\");\n  };\n  const openChat = () => {\n    setIsChatOpen(true);\n    setHasNewMessage(false); // Clear notification when opening chat\n  };\n  useEffect(() => {\n    socket.on(\"room_info_update\", ({\n      roomSize,\n      gameId\n    }) => {\n      setRoomSize(roomSize);\n      setGameId(gameId);\n    });\n    socket.on(\"game_state_update\", data => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.gameId);\n      setCurrentTurn(data.currentTurn);\n      setLastPlayedCard(data.lastPlayedCard);\n      setPlayers(data.players);\n    });\n    socket.on(\"player_hand\", data => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    });\n    socket.on(\"receive_message\", data => {\n      setMessages(prev => [...prev, data]);\n      if (!isChatOpen) {\n        setHasNewMessage(true); // Show notification if chat is closed\n      }\n    });\n    socket.on(\"invalid_move\", data => {\n      toast.error(data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"player_passed\", data => {\n      toast.info(`${data.playerName} passed`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"player_finished\", data => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`${data.finished} has finished`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"game_over\", data => {\n      setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`Game over! Last Place: ${data.finished}`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"force_disconnect\", () => {\n      socket.emit(\"leave_room\");\n      navigate(\"/\");\n    });\n    return () => {\n      socket.off(\"room_info_update\");\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n      socket.off(\"receive_message\");\n      socket.off(\"invalid_move\");\n      socket.off(\"player_finished\");\n      socket.off(\"game_over\");\n      socket.off(\"force_disconnect\");\n      socket.off(\"player_passed\");\n    };\n  }, [socket, isChatOpen, navigate]);\n  useEffect(() => {\n    const unsubscribe = DndProvider.context.backend.getMonitor().subscribeToStateChange(() => {\n      const monitor = DndProvider.context.backend.getMonitor();\n      setIsDragging(monitor.isDragging());\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `game-room ${isDragging ? 'dragging-active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentTurn, \"'s Turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-button\",\n            onClick: openChat,\n            children: [\"Chat\", hasNewMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"leave-button\",\n            onClick: disconnect,\n            children: \"Leave Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-table\",\n          children: [players && players.filter(player => player.username !== username).map((player, index) => {\n            const position = getPlayerPositions()[index + 1];\n            return /*#__PURE__*/_jsxDEV(PlayerPosition, {\n              position: position,\n              playerName: player.username,\n              cardCount: player.cardCount\n            }, player.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center-area\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pile\",\n              children: lastPlayedCard && lastPlayedCard.split(\" \").map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n                card: card,\n                isSelectable: false\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DndProvider, {\n            backend: HTML5Backend,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-hand\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cards\",\n                children: playerCards.map((card, index) => /*#__PURE__*/_jsxDEV(DraggableCard, {\n                  index: index,\n                  card: card,\n                  isSelected: selectedCard.includes(card),\n                  moveCard: moveCard\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"play-button\",\n                  onClick: playCard,\n                  disabled: selectedCard.length === 0,\n                  children: \"Play\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"pass-button\",\n                  onClick: passTurn,\n                  children: \"Pass\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      room: room,\n      username: username,\n      isOpen: isChatOpen,\n      onClose: () => setIsChatOpen(false),\n      messages: messages,\n      setMessages: setMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n// <Chat socket={socket} room={room} username={username} />\n_s4(GameRoom, \"p6JL5huo+4Cwtgl+HWi+/e/AY/c=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","DndProvider","useDrag","useDrop","HTML5Backend","Chat","toast","ToastContainer","jsxDEV","_jsxDEV","GameRoom","socket","_s4","_s","$RefreshSig$","_s2","_s3","location","navigate","username","room","roomSize","initialSize","state","setRoomSize","playerCards","setPlayerCards","gameId","setGameId","selectedCard","setSelectedCard","currentTurn","setCurrentTurn","lastPlayedCard","setLastPlayedCard","players","setPlayers","messages","setMessages","isChatOpen","setIsChatOpen","hasNewMessage","setHasNewMessage","isDragging","setIsDragging","dragMonitorRef","useRef","useCustomDrag","options","collected","drag","collect","monitor","current","getPlayerPositions","PlayerAvatar","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCardClick","card","prev","includes","filter","c","getCardImage","rankMap","suitMap","rank","slice","suit","Card","isSelectable","isSelected","faceDown","onClick","src","alt","DraggableCard","index","moveCard","type","item","id","dragging","isOver","drop","accept","hover","ref","node","PlayerPosition","position","playerName","cardCount","isHovered","setIsHovered","onMouseEnter","onMouseLeave","Array","map","_","i","dragIndex","hoverIndex","newCards","draggedCard","splice","playCard","selectedCardString","join","console","log","emit","passTurn","disconnect","openChat","on","data","error","message","autoClose","hideProgressBar","closeOnClick","draggable","pauseOnHover","theme","info","finished","off","unsubscribe","context","backend","getMonitor","subscribeToStateChange","player","split","disabled","length","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport Chat from \"./Chat\";\nimport './GameRoom.css';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction GameRoom({ socket }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { username, room, roomSize: initialSize } = location.state || {};\n  const [roomSize, setRoomSize] = useState(initialSize);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(\"\");\n  const [selectedCard, setSelectedCard] = useState([]);\n  const [currentTurn, setCurrentTurn] = useState(\"\");\n  const [lastPlayedCard, setLastPlayedCard] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [hasNewMessage, setHasNewMessage] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  const dragMonitorRef = useRef(null);\n\n// Create a custom drag hook that tracks global drag state\nconst useCustomDrag = (options) => {\n  const [collected, drag] = useDrag({\n    ...options,\n    collect: (monitor) => {\n      const isDragging = monitor.isDragging();\n      \n      // Update the global dragging state\n      if (isDragging !== dragMonitorRef.current) {\n        dragMonitorRef.current = isDragging;\n        setIsDragging(isDragging);\n      }\n      \n      // Return original collected props\n      return options.collect ? options.collect(monitor) : { isDragging };\n    }\n  });\n  \n  return [collected, drag];\n};\n\n\n  const getPlayerPositions = () => {\n    switch (roomSize) {\n      case 2:\n        return ['bottom', 'top'];\n      case 3:\n        return ['bottom', 'left', 'right'];\n      case 4:\n        return ['bottom', 'left', 'top', 'right'];\n      default:\n        return ['bottom'];\n    }\n  };\n\n  const PlayerAvatar = ({ name }) => (\n    <div className=\"player-avatar\">\n      <div className=\"avatar-circle\">{name[0]}</div>\n      <div className=\"player-name\">{name}</div>\n    </div>\n  );\n\n  // Modified to handle multiple card selection\n  const handleCardClick = (card) => {\n    setSelectedCard(prev => {\n      if (prev.includes(card)) {\n        return prev.filter(c => c !== card);\n      } else {\n        return [...prev, card];\n      }\n    });\n  };\n\n  const getCardImage = (card) => {\n    if (!card) return 'cardBack.png';\n    \n    // Convert card notation to image filename\n    const rankMap = {\n      '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',\n      '10': '10', 'J': 'J', 'Q': 'Q', 'K': 'K', 'A': 'A', '2': '2'\n    };\n\n    const suitMap = {\n      'C': 'Clubs',\n      'D': 'Diamonds',\n      'H': 'Hearts',\n      'S': 'Spades'\n    };\n\n    const rank = card.slice(0, -1);\n    const suit = card.slice(-1);\n    \n    return `card${suitMap[suit]}${rankMap[rank]}.png`;\n  };\n\n  const Card = ({ card, isSelectable = true, isSelected = false, faceDown = false }) => (\n    <div \n      className={`playing-card ${isSelectable ? 'selectable' : ''} \n        ${isSelected ? 'selected' : ''}`}\n      onClick={() => isSelectable && handleCardClick(card)}\n    >\n      <img \n        src={`/images/cards/${faceDown ? 'cardBack.png' : getCardImage(card)}`} \n        alt={faceDown ? 'Card back' : card}\n        className=\"card-image\"\n      />\n    </div>\n  );\n\n  const DraggableCard = ({ index, card, isSelected, moveCard, setIsDragging }) => {\n    const [{ isDragging }, drag] = useDrag({\n      type: 'card',\n      item: { index, id: card },\n      collect: (monitor) => {\n        const dragging = monitor.isDragging();\n        // Update the parent's dragging state\n        setIsDragging(dragging);\n        return { isDragging: dragging };\n      },\n    });\n  \n    const [{ isOver }, drop] = useDrop({\n      accept: 'card',\n      hover(item, monitor) {\n        // Skip processing if it's the same card\n        if (item.index === index) {\n          return;\n        }\n        \n        // Move the card\n        moveCard(item.index, index);\n        \n        // Update the index\n        item.index = index;\n      },\n      collect: (monitor) => ({\n        isOver: monitor.isOver(),\n      }),\n    });\n  \n    // Create a ref and attach both drag and drop to it\n    const ref = (node) => {\n      drag(drop(node));\n    };\n  \n    return (\n      <div\n        ref={ref}\n        className={`\n          playing-card \n          selectable \n          ${isSelected ? 'selected' : ''} \n          ${isDragging ? 'is-dragging' : ''} \n          ${isOver && !isDragging ? 'is-over' : ''}\n        `}\n        onClick={() => handleCardClick(card)}\n      >\n        <img \n          src={`/images/cards/${getCardImage(card)}`}\n          alt={card}\n          className=\"card-image\"\n        />\n      </div>\n    );\n  };\n\n  const PlayerPosition = ({ position, playerName, cardCount = 0 }) => {\n    const [isHovered, setIsHovered] = useState(false);\n    \n    return (\n      <div \n        className={`player ${position}`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div className={`card-stack ${position === 'left' || position === 'right' ? 'horizontal' : ''} ${isHovered ? 'expanded' : ''}`}>\n          {[...Array(cardCount)].map((_, i) => (\n            <Card key={i} faceDown={true} isSelectable={false} />\n          ))}\n        </div>\n        <PlayerAvatar name={playerName} />\n      </div>\n    );\n  };\n\n  const moveCard = (dragIndex, hoverIndex) => {\n    const newCards = [...playerCards];\n    const draggedCard = newCards[dragIndex];\n    newCards.splice(dragIndex, 1);\n    newCards.splice(hoverIndex, 0, draggedCard);\n    setPlayerCards(newCards);\n  };\n\n  const playCard = () => {\n    const selectedCardString = selectedCard.join(' ');\n    console.log(\"GameId and Card played: \" + gameId + \" \" + selectedCardString);\n    socket.emit(\"play_card\", { gameId, selectedCard: selectedCardString });\n    setSelectedCard([]);\n  };\n\n  const passTurn = () => {\n    console.log(\"Passing\");\n    socket.emit(\"play_card\", { gameId, selectedCard: \"pass\" });\n  };\n\n  const disconnect = () => {\n    console.log(\"Disconnecting\");\n    socket.emit(\"leave_room\");\n    navigate(\"/\");\n  };\n\n  const openChat = () => {\n    setIsChatOpen(true);\n    setHasNewMessage(false); // Clear notification when opening chat\n  };\n\n  useEffect(() => {\n    socket.on(\"room_info_update\", ({ roomSize, gameId }) => {\n      setRoomSize(roomSize);\n      setGameId(gameId);\n    });\n    \n    socket.on(\"game_state_update\", (data) => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.gameId);\n      setCurrentTurn(data.currentTurn);\n      setLastPlayedCard(data.lastPlayedCard);\n      setPlayers(data.players);\n    });\n\n    socket.on(\"player_hand\", (data) => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    });\n\n    socket.on(\"receive_message\", (data) => {\n      setMessages((prev) => [...prev, data]);\n      if (!isChatOpen) {\n        setHasNewMessage(true); // Show notification if chat is closed\n      }\n    });\n\n    socket.on(\"invalid_move\", (data) => {\n      toast.error(data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n    socket.on(\"player_passed\", (data) => {\n      toast.info(`${data.playerName} passed`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n    socket.on(\"player_finished\", (data) => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`${data.finished} has finished`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n  \n    socket.on(\"game_over\", (data) => {\n      setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`Game over! Last Place: ${data.finished}`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n    socket.on(\"force_disconnect\", () => {\n      socket.emit(\"leave_room\");\n      navigate(\"/\");\n    });\n\n    return () => {\n      socket.off(\"room_info_update\");\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n      socket.off(\"receive_message\");\n      socket.off(\"invalid_move\");\n      socket.off(\"player_finished\");\n      socket.off(\"game_over\");\n      socket.off(\"force_disconnect\");\n      socket.off(\"player_passed\");\n    };\n  }, [socket, isChatOpen, navigate]);\n\n  useEffect(() => {\n    const unsubscribe = DndProvider.context.backend.getMonitor().subscribeToStateChange(() => {\n      const monitor = DndProvider.context.backend.getMonitor();\n      setIsDragging(monitor.isDragging());\n    });\n    \n    return () => unsubscribe();\n  }, []);\n\n  return ( \n    <div>\n      <div className={`game-room ${isDragging ? 'dragging-active' : ''}`}>\n        <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\n        <div className=\"game-header\">\n          <h2>{currentTurn}'s Turn</h2>\n          <div className=\"header-buttons\">\n          <button className=\"chat-button\" onClick={openChat}>\n            Chat\n            {hasNewMessage && <span className=\"chat-notification\"></span>}\n          </button>\n            <button className=\"leave-button\" onClick={disconnect}>Leave Game</button>\n          </div>\n        </div>\n\n        <div className=\"game-container\">\n          <div className=\"game-table\">\n            {players && players\n              .filter(player => player.username !== username)\n              .map((player, index) => {\n                const position = getPlayerPositions()[index + 1];\n                return (\n                  <PlayerPosition\n                    key={player.username}\n                    position={position}\n                    playerName={player.username}\n                    cardCount={player.cardCount}\n                  />\n                );\n              })}\n\n            <div className=\"center-area\">\n              <div className=\"pile\">\n                {lastPlayedCard && \n                  lastPlayedCard.split(\" \").map((card, index) => (\n                    <Card key={index} card={card} isSelectable={false} />\n                  ))\n                }\n              </div>\n            </div>\n\n            <DndProvider backend={HTML5Backend}>\n              <div className=\"player-hand\">\n                <div className=\"cards\">\n                  {playerCards.map((card, index) => (\n                    <DraggableCard\n                      key={index}\n                      index={index}\n                      card={card}\n                      isSelected={selectedCard.includes(card)}\n                      moveCard={moveCard}\n                    />\n                  ))}\n                </div>\n                <div className=\"controls\">\n                  <button \n                    className=\"play-button\"\n                    onClick={playCard}\n                    disabled={selectedCard.length === 0}\n                  >\n                    Play\n                  </button>\n                  <button \n                    className=\"pass-button\"\n                    onClick={passTurn}\n                  >\n                    Pass\n                  </button>\n                </div>\n              </div>\n            </DndProvider>\n          </div>\n        </div>\n      </div>\n\n      <Chat \n        socket={socket} \n        room={room} \n        username={username} \n        isOpen={isChatOpen}\n        onClose={() => setIsChatOpen(false)}\n        messages={messages}\n        setMessages={setMessages}\n      />\n    </div>\n  );\n}\n// <Chat socket={socket} room={room} username={username} />\nexport default GameRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}