{"ast":null,"code":"var _jsxFileName = \"/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/GameRoom.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport './GameRoom.css';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRoom({\n  socket\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    username,\n    room,\n    roomSize: initialSize\n  } = location.state || {};\n  const [roomSize, setRoomSize] = useState(initialSize);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(\"\");\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentTurn, setCurrentTurn] = useState(\"\");\n  const [lastPlayedCard, setLastPlayedCard] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [hasNewMessage, setHasNewMessage] = useState(false);\n  const getPlayerPositions = () => {\n    switch (roomSize) {\n      case 2:\n        return ['bottom', 'top'];\n      case 3:\n        return ['bottom', 'left', 'right'];\n      case 4:\n        return ['bottom', 'left', 'top', 'right'];\n      default:\n        return ['bottom'];\n    }\n  };\n  const PlayerAvatar = ({\n    name\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-avatar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-circle\",\n      children: name[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  // Modified to handle multiple card selection\n  const handleCardClick = card => {\n    setSelectedCard(prev => {\n      if (prev.includes(card)) {\n        return prev.filter(c => c !== card);\n      } else {\n        return [...prev, card];\n      }\n    });\n  };\n  const getCardImage = card => {\n    if (!card) return 'cardBack.png';\n\n    // Convert card notation to image filename\n    const rankMap = {\n      '3': '3',\n      '4': '4',\n      '5': '5',\n      '6': '6',\n      '7': '7',\n      '8': '8',\n      '9': '9',\n      '10': '10',\n      'J': 'J',\n      'Q': 'Q',\n      'K': 'K',\n      'A': 'A',\n      '2': '2'\n    };\n    const suitMap = {\n      'C': 'Clubs',\n      'D': 'Diamonds',\n      'H': 'Hearts',\n      'S': 'Spades'\n    };\n    const rank = card.slice(0, -1);\n    const suit = card.slice(-1);\n    return `card${suitMap[suit]}${rankMap[rank]}.png`;\n  };\n  const Card = ({\n    card,\n    isSelectable = true,\n    isSelected = false,\n    faceDown = false\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `playing-card ${isSelectable ? 'selectable' : ''} \n        ${isSelected ? 'selected' : ''}`,\n    onClick: () => isSelectable && handleCardClick(card),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      // src={`../images/cards/${faceDown ? 'cardBack.png' : getCardImage(card)}`} \n      src: `/images/cards/${faceDown ? 'cardBack.png' : getCardImage(card)}`,\n      alt: faceDown ? 'Card back' : card,\n      className: \"card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n  const PlayerPosition = ({\n    position,\n    playerName,\n    cardCount = 0\n  }) => {\n    _s();\n    const [isHovered, setIsHovered] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `player ${position}`,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card-stack ${position === 'left' || position === 'right' ? 'horizontal' : ''} ${isHovered ? 'expanded' : ''}`,\n        children: [...Array(cardCount)].map((_, i) => /*#__PURE__*/_jsxDEV(Card, {\n          faceDown: true,\n          isSelectable: false\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerAvatar, {\n        name: playerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  };\n  _s(PlayerPosition, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n  const playCard = () => {\n    const selectedCardString = selectedCard.join(' ');\n    console.log(\"GameId and Card played: \" + gameId + \" \" + selectedCardString);\n    socket.emit(\"play_card\", {\n      gameId,\n      selectedCard: selectedCardString\n    });\n    setSelectedCard(\"\");\n  };\n  const passTurn = () => {\n    console.log(\"Passing\");\n    socket.emit(\"play_card\", {\n      gameId,\n      selectedCard: \"pass\"\n    });\n  };\n  const disconnect = () => {\n    console.log(\"Disconnecting\");\n    socket.emit(\"leave_room\");\n    navigate(\"/\");\n  };\n  const openChat = () => {\n    setIsChatOpen(true);\n    setHasNewMessage(false); // Clear notification when opening chat\n    console.log(\"chat open status1 \" + String(isChatOpen));\n  };\n  useEffect(() => {\n    socket.on(\"room_info_update\", ({\n      roomSize,\n      gameId\n    }) => {\n      setRoomSize(roomSize);\n      setGameId(gameId);\n    });\n    socket.on(\"game_state_update\", data => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.gameId);\n      setCurrentTurn(data.currentTurn);\n      setLastPlayedCard(data.lastPlayedCard);\n      setPlayers(data.players);\n    });\n    socket.on(\"player_hand\", data => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    });\n    socket.on(\"receive_message\", data => {\n      setMessages(prev => [...prev, data]);\n      if (!isChatOpen) {\n        setHasNewMessage(true); // Show notification if chat is closed\n      }\n    });\n    socket.on(\"invalid_move\", data => {\n      toast.error(data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"player_passed\", data => {\n      toast.info(`${data.playerName} passed`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"player_finished\", data => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`${data.finished} has finished`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"game_over\", data => {\n      setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`Game over! Last Place: ${data.finished}`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\"\n      });\n    });\n    socket.on(\"force_disconnect\", () => {\n      socket.emit(\"leave_room\");\n      navigate(\"/\");\n    });\n    return () => {\n      socket.off(\"room_info_update\");\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n      socket.off(\"receive_message\");\n      socket.off(\"invalid_move\");\n      socket.off(\"player_finished\");\n      socket.off(\"game_over\");\n      socket.off(\"force_disconnect\");\n      socket.off(\"player_passed\");\n    };\n  }, [socket, isChatOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-room\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentTurn, \"'s Turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-button\",\n            onClick: openChat,\n            children: [\"Chat\", hasNewMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"chat-notification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"leave-button\",\n            onClick: disconnect,\n            children: \"Leave Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-table\",\n          children: [players && players.filter(player => player.username !== username).map((player, index) => {\n            const position = getPlayerPositions()[index + 1];\n            return /*#__PURE__*/_jsxDEV(PlayerPosition, {\n              position: position,\n              playerName: player.username,\n              cardCount: player.cardCount\n            }, player.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center-area\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pile\",\n              children: lastPlayedCard && lastPlayedCard.split(\" \").map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n                card: card,\n                isSelectable: false\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-hand\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: playerCards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n                card: card,\n                isSelected: selectedCard.includes(card)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-button\",\n                onClick: playCard,\n                disabled: selectedCard.length === 0,\n                children: \"Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pass-button\",\n                onClick: passTurn,\n                children: \"Pass\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      socket: socket,\n      room: room,\n      username: username,\n      isOpen: isChatOpen,\n      onClose: () => setIsChatOpen(false),\n      messages: messages,\n      setMessages: setMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n// <Chat socket={socket} room={room} username={username} />\n_s2(GameRoom, \"xWMlSFpQ/PfVycoTgt3MvEEiXE0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GameRoom;\nexport default GameRoom;\nvar _c;\n$RefreshReg$(_c, \"GameRoom\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Chat","toast","ToastContainer","jsxDEV","_jsxDEV","GameRoom","socket","_s2","_s","$RefreshSig$","location","navigate","username","room","roomSize","initialSize","state","setRoomSize","playerCards","setPlayerCards","gameId","setGameId","selectedCard","setSelectedCard","currentTurn","setCurrentTurn","lastPlayedCard","setLastPlayedCard","players","setPlayers","messages","setMessages","isChatOpen","setIsChatOpen","hasNewMessage","setHasNewMessage","getPlayerPositions","PlayerAvatar","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCardClick","card","prev","includes","filter","c","getCardImage","rankMap","suitMap","rank","slice","suit","Card","isSelectable","isSelected","faceDown","onClick","src","alt","PlayerPosition","position","playerName","cardCount","isHovered","setIsHovered","onMouseEnter","onMouseLeave","Array","map","_","i","playCard","selectedCardString","join","console","log","emit","passTurn","disconnect","openChat","String","on","data","error","message","autoClose","hideProgressBar","closeOnClick","draggable","pauseOnHover","theme","info","finished","off","player","index","split","disabled","length","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/nathantran/Documents/VSCode/thirteen_game/client/src/components/GameRoom.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Chat from \"./Chat\";\nimport './GameRoom.css';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction GameRoom({ socket }) {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { username, room, roomSize: initialSize } = location.state || {};\n  const [roomSize, setRoomSize] = useState(initialSize);\n  const [playerCards, setPlayerCards] = useState([]);\n  const [gameId, setGameId] = useState(\"\");\n  const [selectedCard, setSelectedCard] = useState(\"\");\n  const [currentTurn, setCurrentTurn] = useState(\"\");\n  const [lastPlayedCard, setLastPlayedCard] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [hasNewMessage, setHasNewMessage] = useState(false);\n\n  const getPlayerPositions = () => {\n    switch (roomSize) {\n      case 2:\n        return ['bottom', 'top'];\n      case 3:\n        return ['bottom', 'left', 'right'];\n      case 4:\n        return ['bottom', 'left', 'top', 'right'];\n      default:\n        return ['bottom'];\n    }\n  };\n\n  const PlayerAvatar = ({ name }) => (\n    <div className=\"player-avatar\">\n      <div className=\"avatar-circle\">{name[0]}</div>\n      <div className=\"player-name\">{name}</div>\n    </div>\n  );\n\n  // Modified to handle multiple card selection\n  const handleCardClick = (card) => {\n    setSelectedCard(prev => {\n      if (prev.includes(card)) {\n        return prev.filter(c => c !== card);\n      } else {\n        return [...prev, card];\n      }\n    });\n  };\n\n  const getCardImage = (card) => {\n    if (!card) return 'cardBack.png';\n    \n    // Convert card notation to image filename\n    const rankMap = {\n      '3': '3', '4': '4', '5': '5', '6': '6', '7': '7', '8': '8', '9': '9',\n      '10': '10', 'J': 'J', 'Q': 'Q', 'K': 'K', 'A': 'A', '2': '2'\n    };\n\n    const suitMap = {\n      'C': 'Clubs',\n      'D': 'Diamonds',\n      'H': 'Hearts',\n      'S': 'Spades'\n    };\n\n    const rank = card.slice(0, -1);\n    const suit = card.slice(-1);\n    \n    return `card${suitMap[suit]}${rankMap[rank]}.png`;\n  };\n\n  const Card = ({ card, isSelectable = true, isSelected = false, faceDown = false }) => (\n    <div \n      className={`playing-card ${isSelectable ? 'selectable' : ''} \n        ${isSelected ? 'selected' : ''}`}\n      onClick={() => isSelectable && handleCardClick(card)}\n    >\n      <img \n        // src={`../images/cards/${faceDown ? 'cardBack.png' : getCardImage(card)}`} \n        src={`/images/cards/${faceDown ? 'cardBack.png' : getCardImage(card)}`} \n        alt={faceDown ? 'Card back' : card}\n        className=\"card-image\"\n      />\n    </div>\n  );\n\n  const PlayerPosition = ({ position, playerName, cardCount = 0 }) => {\n    const [isHovered, setIsHovered] = useState(false);\n    \n    return (\n      <div \n        className={`player ${position}`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div className={`card-stack ${position === 'left' || position === 'right' ? 'horizontal' : ''} ${isHovered ? 'expanded' : ''}`}>\n          {[...Array(cardCount)].map((_, i) => (\n            <Card key={i} faceDown={true} isSelectable={false} />\n          ))}\n        </div>\n        <PlayerAvatar name={playerName} />\n      </div>\n    );\n  };\n\n  const playCard = () => {\n    const selectedCardString = selectedCard.join(' ');\n    console.log(\"GameId and Card played: \" + gameId + \" \" + selectedCardString);\n    socket.emit(\"play_card\", { gameId, selectedCard: selectedCardString });\n    setSelectedCard(\"\")\n  };\n\n  const passTurn = () => {\n    console.log(\"Passing\");\n    socket.emit(\"play_card\", { gameId, selectedCard: \"pass\" });\n  };\n\n  const disconnect = () => {\n    console.log(\"Disconnecting\");\n    socket.emit(\"leave_room\");\n    navigate(\"/\");\n  };\n\n  const openChat = () => {\n    setIsChatOpen(true);\n    setHasNewMessage(false); // Clear notification when opening chat\n    console.log(\"chat open status1 \" + String(isChatOpen));\n  };\n\n  useEffect(() => {\n    socket.on(\"room_info_update\", ({ roomSize, gameId }) => {\n      setRoomSize(roomSize);\n      setGameId(gameId);\n    });\n    \n    socket.on(\"game_state_update\", (data) => {\n      console.log(\"Game state updated:\", data);\n      setGameId(data.gameId);\n      setCurrentTurn(data.currentTurn);\n      setLastPlayedCard(data.lastPlayedCard);\n      setPlayers(data.players);\n    })\n\n    socket.on(\"player_hand\", (data) => {\n      console.log(\"Player hand updated:\", data);\n      setPlayerCards(data);\n    })\n\n    socket.on(\"receive_message\", (data) => {\n      setMessages((prev) => [...prev, data]);\n      if (!isChatOpen) {\n        setHasNewMessage(true); // Show notification if chat is closed\n      }\n    });\n\n    socket.on(\"invalid_move\", (data) => {\n      toast.error(data.message, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n    socket.on(\"player_passed\", (data) => {\n      toast.info(`${data.playerName} passed`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    })\n\n    socket.on(\"player_finished\", (data) => {\n      // setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`${data.finished} has finished`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n  \n    socket.on(\"game_over\", (data) => {\n      setPlayerCards([]);\n      // setGameStarted(false);\n      toast.info(`Game over! Last Place: ${data.finished}`, {\n        position: \"top-center\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        draggable: true,\n        pauseOnHover: false,\n        theme: \"light\",\n      });\n    });\n\n    socket.on(\"force_disconnect\", () => {\n      socket.emit(\"leave_room\");\n      navigate(\"/\");\n    })\n\n    return () => {\n      socket.off(\"room_info_update\");\n      socket.off(\"begin_game\");\n      socket.off(\"game_state_update\");\n      socket.off(\"player_hand\");\n      socket.off(\"receive_message\");\n      socket.off(\"invalid_move\");\n      socket.off(\"player_finished\");\n      socket.off(\"game_over\");\n      socket.off(\"force_disconnect\");\n      socket.off(\"player_passed\");\n    };\n  }, [socket, isChatOpen]);\n\n  return ( \n    <div>\n      <div className=\"game-room\">\n        <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\n        <div className=\"game-header\">\n          <h2>{currentTurn}'s Turn</h2>\n          <div className=\"header-buttons\">\n          <button className=\"chat-button\" onClick={openChat}>\n            Chat\n            {hasNewMessage && <span className=\"chat-notification\"></span>}\n          </button>\n            <button className=\"leave-button\" onClick={disconnect}>Leave Game</button>\n          </div>\n        </div>\n\n        <div className=\"game-container\">\n          <div className=\"game-table\">\n            {players && players\n              .filter(player => player.username !== username)\n              .map((player, index) => {\n                const position = getPlayerPositions()[index + 1];\n                return (\n                  <PlayerPosition\n                    key={player.username}\n                    position={position}\n                    playerName={player.username}\n                    cardCount={player.cardCount}\n                  />\n                );\n              })}\n\n            <div className=\"center-area\">\n              <div className=\"pile\">\n                {lastPlayedCard && \n                  lastPlayedCard.split(\" \").map((card, index) => (\n                    <Card key={index} card={card} isSelectable={false} />\n                  ))\n                }\n              </div>\n            </div>\n\n            <div className=\"player-hand\">\n              <div className=\"cards\">\n                {playerCards.map((card, index) => (\n                  <Card\n                    key={index}\n                    card={card}\n                    isSelected={selectedCard.includes(card)}\n                  />\n                ))}\n              </div>\n              <div className=\"controls\">\n                <button \n                  className=\"play-button\"\n                  onClick={playCard}\n                  disabled={selectedCard.length === 0}\n                >\n                  Play\n                </button>\n                <button \n                  className=\"pass-button\"\n                  onClick={passTurn}\n                >\n                  Pass\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Chat \n        socket={socket} \n        room={room} \n        username={username} \n        isOpen={isChatOpen}\n        onClose={() => setIsChatOpen(false)}\n        messages={messages}\n        setMessages={setMessages}\n      />\n    </div>\n  );\n}\n// <Chat socket={socket} room={room} username={username} />\nexport default GameRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}